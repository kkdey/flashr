%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{Factor Loading using Adaptive Shrinkage using flashr}
%\VignettePackage{flashr}

% To compile this document
% library('knitr'); rm(list=ls()); knit('flashr/vignettes/flashr-vig.Rnw')
% library('knitr'); rm(list=ls()); knit2pdf('flashr/vignettes/flashr-vig.Rnw');
% openPDF('flashr-vig.pdf')
% !Rnw weave = knitr

\documentclass[12pt]{article}

\newcommand{\CountClust}{\textit{CountClust}}
\newcommand{\flashr}{\textit{flashr}}
\usepackage{dsfont}
\usepackage{cite}


<<knitr, echo=FALSE, results="hide">>=
library("knitr")
opts_chunk$set(tidy=FALSE,tidy.opts=list(width.cutoff=30),dev="png",fig.show="hide",
               fig.width=8,fig.height=6,
               message=FALSE)
@

<<style, eval=TRUE, echo=FALSE, results="asis">>=
BiocStyle::latex()
@

\author{Wei Wang, Kushal K Dey, David Gerrard \& Matthew Stephens \\[1em] \small{\textit{Stephens Lab}, The University of Chicago} \mbox{ }\\ \small{\texttt{$^*$Correspondending Email: mstephens@uchicago.edu}}}

\bioctitle[Factor analysis with Adaptive Shrinkage using \flashr{}]{Factor analysis with Adaptive Shrinkage using \flashr{}}

\begin{document}

\maketitle

\begin{abstract}
  \vspace{1em}
  The \R{} package \flashr{} provides tools to perform factor analysis with adaptive shrinkage on the factor loadings and the factors and also provides means to visualization of the factor analysis results. The adaptive shrinkage is performed using the \textbf{ashr} package due to Stephens (2016).

  The package provides generic functions to visualize loadings data and post processing functions to analyze the factors estimated with focus on sparsity and the proportion of variance in the data explained by each factor. It also provides a list of features that play the key role in distinguishing the factors.

\vspace{1em}
\textbf{\flashr{} version:} \Sexpr{packageDescription("flashr")$Version} \footnote{This document used the vignette from \Bioconductor{} package \Biocpkg{DESeq2, CountClust} as \CRANpkg{knitr} template}

\end{abstract}


<<options, echo=FALSE>>=
options(digits=3, width=80, prompt=" ", continue=" ")
@

\newpage

\tableofcontents

\section{Introduction}

FLASH (Factor Loadings with Adaptive Shrinkage) is an extension of the adaptive shrinkage methods in \textbf{ashr} package due to Stephens (2016) to the domain of factor analysis. An important consideration in any factor analysis scheme are shrinkage and sparsity. There are many algorithms that perform Sparse Factor Analysis (check Engelhardt and Stephens), however determining the level of shrinkage is a challenging task for the user. FLASH solves this problem by adaptively selecting the level of shrinkage for factor loadings and factors.

\flashr{} offers 3 versions of FLASH (\textit{normal}, \textit{greedy} and \textit{backfitting}) to perform factor analysis with adaptive shrinkage. Also, it provides generic visualization tools to view and analyze the factor loadings along with post processing tools to check the proportion of variance explained and sparsity level of the different factors. Finally, it offers functions to select a list of features that drive the factors or play the most key role in distinguishing the features.

\section{\flashr{} Installation}

\flashr{} requires the packages \CRANpkg{ashr}, \CRANpkg{ggplot2}, \CRANpkg{irlba}, \CRANpkg{CountClust}, \CRANpkg{cowplot}, \CRANpkg{RColorBrewer}, \CRANpkg{grid}, \CRANpkg{gridExtra}. Also one needs the packages \CRANpkg{devtools}to install the developmental version of the \flashr{} which will be the most up-to-date version.

We install the Github version of the package.

To install dependencies, run in R:
<<install_dependencies, eval=FALSE>>=
install.packages(c("irlba", "tensr", "devtools"))
devtools::install_github("stephens999/ashr", ref = "uni")
@ %def

<<install_flashr_bio, eval=FALSE>>=
devtools::install_github("kkdey/flashr")
@ %def

<<load_flashr_bio, eval=TRUE>>=
library(flashr)
@ %def

\section{Data preparation}

We install a single cell RNA-seq data across mouse embryo developmental stages due to Deng \textit{et al} 2014 \cite{Deng2014}. We load it as an ExpressionSet object.\begin{verb} singleCellRNASeqMouseDeng2014 \end{verb} data package due to Deng \textit{et al} is a processed version of the data publicly available at Gene Expression Omnibus (GEO:GSE45719: see \url{http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE45719}).

<<data_install_deng, echo=TRUE, eval=TRUE>>=
library(devtools)

read.data1 = function() {
  x = tempfile()
  download.file('https://cdn.rawgit.com/kkdey/singleCellRNASeqMouseDeng2014/master/data/Deng2014MouseEsc.rda', destfile=x, quiet=TRUE)
  z = get(load((x)))
  return(z)
}

Deng2014MouseESC <- read.data1()

## Alternatively
# install_github('kkdey/singleCellRNASeqMouseDeng2014')

@ %def

We load the data

<<load_deng, echo=TRUE, eval=TRUE>>=
deng.counts <- Biobase::exprs(Deng2014MouseESC)
deng.meta_data <- Biobase::pData(Deng2014MouseESC)
deng.gene_names <- rownames(deng.counts)

voom_out <- limma::voom(deng.counts);
voom_weights <- t(voom_out$weights);
voom_data <- t(voom_out$E);
@ %def


We apply FLASH on the data. We show here example of two versions of FLASH - the normal pooled FLASH on successive residuals and the greedy FLASH. We assume the number of factors to be $K=10$.

<<flash_apply, echo=TRUE, eval=FALSE>>=
ll <- flash.greedy(voom_data, K=10, flash_para = list(tol=1e-3, maxiter_r1 = 50,
                partype="known", sigmae2_true = voom_weights,
                nonnegative=FALSE));
ll <- flashpool(voom_data, K=10, tol=1e-3, maxiter_r1 = 50,
                partype="known", sigmae2_true = voom_weights);
@ %def

We load the FLASH output from the greedy implementation of FLASH and then we process the output.

<<load_flash_output, echo=TRUE, eval=TRUE>>=
library(flashr)
ll_deng <- get(data("flash_deng_ex"))
@ %def

We postprocess the loadings and the factors from the FLASH output. We calculate the percentage of variance explained by each factor.

<<flash_postprocess, echo=TRUE, eval=TRUE>>=
postprocess_ll <- flash_factor_postprocess(ll_deng$l,ll_deng$f, voom_data)
pve_percentage <- c("", paste0(":PVE-", round(postprocess_ll$PVE*100,0), "%"))
@ %def

We represent the loadings by a stacked barchart of the loadings obtained from the FLASH output. We keep aside the first factor as that represents the mean factor.

<<flash_structure, eval=TRUE, warning=FALSE, fig.show="asis", dpi=144, fig.width=5, fig.height=7, out.width="5in", out.height="7in">>=
omega <- ll_deng$l

annotation <- data.frame(
  sample_id = paste0("X", c(1:NROW(omega))),
  label = factor(deng.meta_data$cell_type,
                        levels = c("zy", "early2cell",
"mid2cell", "late2cell","4cell", "8cell", "16cell","earlyblast","midblast","lateblast") ) )

rownames(omega) <- annotation$sample_id

FactorGGStack(loadings = omega[,-1],
                annotation = annotation,
                palette = c(RColorBrewer::brewer.pal(8, "Accent"),RColorBrewer::brewer.pal(4, "Spectral")),
                yaxis_label = "Development Phase",
                order_sample = TRUE,
                figure_title = "Factor Loadings Structure Plot",
                legend_labels = pve_percentage[-1],
                scale=TRUE,
                axis_tick = list(axis_ticks_length = .1,
                                 axis_ticks_lwd_y = .1,
                                 axis_ticks_lwd_x = .1,
                                 axis_label_size = 7,
                                 axis_label_face = "bold"))

@ %def

We next look at a multi-grid bar chart representation of the factor loadings.

<<flash_multipanel_grid, eval=TRUE, warning=FALSE, fig.show="asis", dpi=144, fig.width=6, fig.height=6, out.width="6in", out.height="6in">>=

FactorGGBar(loadings = omega,
            annotation = annotation,
            palette = list("mid"="white",
                           "low"="red",
                           "high"="blue",
                           "midpoint"=0),
            yaxis_label = "Population Type",
            figure_title = " ",
            axis_tick = list(axis_ticks_length = .1,
                             axis_ticks_lwd_y = .1,
                             axis_ticks_lwd_x = .1,
                             axis_label_size = 7,
                             axis_label_face = "bold"),
            legend_labels=pve_percentage,
            scale=TRUE,
            panel=list(panel_rows=2,
                       panel_title="Factor Loadings Bar plot",
                       panel_title_fontsize=10,
                       panel_title_font=3))

@ %def


Annotations of the top gene ontologies of the factors from the FLASH output.

<<gene_annotations, echo=TRUE, eval=TRUE>>=
ll_f_scale <- apply(ll_deng$f[,-1],2,function(x)
                                  {
                                      if(sd(x)!=0) {return (x/sd(x))}
                                      else {return (x)}
    })

normalize <- function(x) { return (x/sum(x))}

abs_f_scale <- apply(ll_deng$f[,-1],2,function(x) normalize(abs(x)))
indices <- CountClust::ExtractTopFeatures(abs_f_scale, top_features=100, method="poisson", options="min")
imp_features <- apply(indices, c(1,2), function(x) deng.gene_names[x])

imp_features[1:6,1:6]

@ %def

We performed Enrichment Analysis on these important features extracted, the top annotations are reported below.

Factors      |    Gene Ontologies

-----------    ---------------------

 factor 1    |    cell development, neuron projection guidance, stem cell differentiation, mesenchymal cell development, anatomical structure development

 factor 2    |   bounding membrance organelle, protein C-terminus binding, lyosomal membrane

 factor 3    |   nucleolus, nuclear lumen, ribosome assembly, nuclear part, RNA binding, nucleotide binding

 factor 4    |   central nervous system development, cell surface receptor signaling, extracellular space

 factor 5    |   carbon oxygen lyase activity, chromosomal region, regulatory region nucleic acid binding

 factor 6    |   extracellular exosome, extracellular vesicle, extracellular organelle, vesicle

 factor 7    |

 factor 8    |  protein localization to cell periphery, plasma membrane organization

 factor 9    |  sperm-egg recognition, cell-cell recognition, fertilization, regulation of cellular process, substrate-specific transporter activity






\end{document}
