{
    "contents" : "---\ntitle: \"flash\"\nauthor: \"Wei Wang <<weidong@uchicago.edu>>,  Matthew Stephens <<mstephens@uchicago.edu>> \"\ndate: \"`r Sys.Date()`\"\n# bibliography: flash.bib\noutput:\n  rmarkdown::html_vignette:\n    toc: true\n    number_sections: true\nvignette: >\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteIndexEntry{flash}\n---\n\nOne example for flash and how to use greedy and backfitting. For the speed, I just use backfitting with few runs of flash in each iteration. I also compare with PMD, these are all better than PMD.\n\n```{r}\nlibrary(\"flash\")\nsim_K = function(K, N, P, SF, SL, signal,noise){\n  E = matrix(rnorm(N*P,0,noise),nrow=N)\n  Y = E\n  L_true = array(0, dim = c(N,K))\n  F_true = array(0, dim = c(P,K))\n  \n  for(k in 1:K){\n    lstart = rnorm(N, 0, signal)\n    fstart = rnorm(P, 0, signal)\n    \n    index = sample(seq(1:N),(N*SL))\n    lstart[index] = 0\n    index = sample(seq(1:P),(P*SF))\n    fstart[index] = 0\n    \n    L_true[,k] = lstart\n    F_true[,k] = fstart\n    \n    Y = Y + lstart %*% t(fstart)\n  }\n  return(list(Y = Y, L_true = L_true, F_true = F_true, Error = E))\n}\n\ndata = sim_K(K=10,N=100, P=300, SF = 0.95, SL = 0.8, signal = 1,noise = 1)\nY = data$Y\nL_true = data$L_true\nF_true = data$F_true\nE = data$Error\nsvdl = svd(Y)$u\nsvdf = svd(Y)$v\nsvdd = svd(Y)$d\nplot(svdd)\nsvdK = 10\nsqrt(mean(((Y  - svdl[,1:svdK]%*% diag(svdd[1:svdK]) %*% t(svdf[,1:svdK]) )- E)^2)) / sqrt(mean(((Y - 0)- E)^2))\n#sqrt(mean(((Y  - svdd[1] * svdl[,1] %*%  t(svdf[,1]) )- E)^2)) / sqrt(mean(((Y - 0)- E)^2))\nggreedy = greedy(Y,K=30)\n# initial gl and gf as svd\ngl = ggreedy$l\ngf = ggreedy$f\ndim(gl)\nsqrt(mean(((Y  - gl%*%t(gf) )- E)^2)) / sqrt(mean(((Y - 0)- E)^2))\n# proportion in \neigenvalue = rep(0,dim(gl)[2])\nfor(i in 1:length(eigenvalue)){\n  eigenvalue[i] = (sqrt(mean((gl[,i]%*%t(gf[,i]))^2)))\n}\neigenvalue = eigenvalue / sqrt(mean(Y^2))\nplot(eigenvalue)\n\n\ngback = backfitting(Y,gl,gf,tautol = 100, numtau = 5)\ngbl = gback$l\ngbf = gback$f\ndim(gbl)\nsqrt(mean(((Y  - gbl%*%t(gbf) )- E)^2)) / sqrt(mean(((Y - 0)- E)^2))\n```\n\nThe comparing criterion is \n$$\\frac{RMSE - RMSE_{opt}}{RMSE_{naive}}$$\n\nIf we know the variance, we can do better based on our model.\n\nwe can see that if we known the variance matrix, we can do better than using flash with constant variance. I have also compared those with PMD, and the result is flash_hd better then flash which is better then PMD.\n\n```{r}\nsim_hd = function(N, P, SF, SL, signal, a = rchisq(N,3),b = rchisq(P,1),mu = 0){\n\n  E = matrix(rep(0,N*P),nrow=N)\n  sig2_true = matrix(rep(0,N*P),nrow=N)\n  for(i in 1:N){\n    for(j in 1:P){\n      sig2_true[i,j] = mu + a[i] + b[j]\n      E[i,j] = rnorm(1,0,sqrt(mu + a[i] + b[j]))\n    }\n  }\n  \n  K=1\n  lstart = rnorm(N, 0, signal)\n  \n  fstart = rnorm(P, 0, signal)\n  \n  index = sample(seq(1:N),(N*SL))\n  lstart[index] = 0\n  index = sample(seq(1:P),(P*SF))\n  fstart[index] = 0\n  \n  Y = lstart %*% t(fstart) + E\n  \n  return(list(Y = Y, L_true = lstart, F_true = fstart, Error = E,sig2_true = sig2_true))\n}\nlibrary(\"flash\")\nN = 100\nP = 200\nSF = 0.5\nSL = 0.5\nsignal = 1\ndata = sim_hd(N, P, SF, SL, signal, a = rchisq(N,3),b = rchisq(P,1),mu = 0)\nsigmae2_true = data$sig2_true\nY = data$Y\nE = data$Error\nghd = flash_hd(Y,partype = \"known\",sigmae2 = sigmae2_true)\nl = ghd$l\nf = ghd$f\nsqrt(mean(((Y - l %*% t(f))-E)^2))/sqrt(mean((Y - E)^2))\nghd = flash_hd(Y,partype = \"constant\")\nl = ghd$l\nf = ghd$f\nsqrt(mean(((Y - l %*% t(f))-E)^2))/sqrt(mean((Y - E)^2))\ngvem = flash(Y)\nl = gvem$l\nf = gvem$f\nsqrt(mean(((Y - l %*% t(f))-E)^2))/sqrt(mean((Y - E)^2))\n```\n",
    "created" : 1455154381125.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "136215713",
    "id" : "3DC54ECA",
    "lastKnownWriteTime" : 1455156724,
    "path" : "~/HG/ash-sfa/Rcode/postmean/flash/flash/vignettes/flash.Rmd",
    "project_path" : "vignettes/flash.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_markdown"
}